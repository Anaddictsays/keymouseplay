/* Custom styles for the app */
body {
    font-family: 'Inter', sans-serif;
    overflow: hidden; /* Prevent scrolling */
    cursor: none; /* Hide default cursor when locked */
    touch-action: none; /* Prevent browser default touch actions like pull-to-refresh */
}

/* The main overlay that locks the screen */
#lock-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    /* Initial subtle gradient, will be animated */
    background: radial-gradient(circle at center, #1a1a1a, #000000);
    background-size: 200% 200%; /* Larger background for animation */
    display: flex;
    align-items: center;
    justify-content: center;
    flex-direction: column;
    z-index: 9999; /* Ensure it's on top of everything */
    transition: background 0.5s ease-in-out; /* Smooth background transitions for gradients */
    cursor: none; /* Hide cursor when locked */
    animation: background-flow 30s linear infinite alternate; /* Continuous, subtle background animation */
}

/* Keyframes for the continuous background flow */
@keyframes background-flow {
    0% { background-position: 0% 0%; }
    100% { background-position: 100% 100%; }
}

/* Styles for the dynamically generated visual elements */
.visual-element {
    position: absolute;
    opacity: 0;
    transform: scale(0.1) rotate(0deg); /* Initial state with rotation */
    transition: all 0.3s cubic-bezier(0.68, -0.55, 0.27, 1.55); /* Bouncy transition for appearance */
    pointer-events: none; /* Ensure these elements don't block events */
    user-select: none; /* Prevent text selection */
    font-weight: bold;
    text-shadow: 2px 2px 4px rgba(0,0,0,0.5);
    will-change: transform, opacity; /* Optimize for animation */
}

/* Class to make the visual element appear */
.visual-element.show {
    opacity: 1;
    transform: scale(1) rotate(var(--random-rotation, 0deg)); /* Use custom property for random rotation */
}

/* Class to fade out and remove the visual element, with added drift */
.visual-element.hide {
    opacity: 0;
    transform: scale(1.5) rotate(var(--random-rotation, 0deg)) translate(var(--drift-x, 0px), var(--drift-y, 0px)); /* Slightly grow and drift as it fades */
    transition: all 0.7s ease-out; /* Longer transition for fade and drift */
}

/* Heartbeat animation for parent mode instruction */
@keyframes pulse {
    0% { transform: scale(1); opacity: 1; }
    50% { transform: scale(1.05); opacity: 0.9; }
    100% { transform: scale(1); opacity: 1; }
}

.animate-heartbeat {
    animation: pulse 1.5s infinite;
}

/* Base styles for all parent panels */
.parent-panel {
    position: absolute; /* Position relative to parent, not viewport */
    top: 50%; /* Center vertically */
    left: 50%; /* Center horizontally */
    transform: translate(-50%, -50%); /* Adjust for element's own size */
    background-color: rgba(51, 51, 51, 0.9); /* Dark gray, slightly transparent */
    padding: 2rem; /* More padding for centered look */
    display: flex;
    flex-direction: column; /* Stack buttons vertically */
    align-items: center; /* Center buttons horizontally within panel */
    gap: 1rem; /* More space between stacked buttons */
    z-index: 10000; /* Ensure it's on top */
    border-radius: 1rem; /* Rounded corners for the whole panel */
    box-shadow: 0 5px 20px rgba(0,0,0,0.5); /* Stronger shadow */
    opacity: 0; /* Start hidden */
    pointer-events: none; /* Do not block events when hidden */
    transition: opacity 0.3s ease-out; /* Fade in/out */
}

.parent-panel.show {
    opacity: 1; /* Fade in */
    pointer-events: auto; /* Allow interaction when shown */
}

/* Specific styling for the main parent control panel (no background color) */
#parent-control-panel {
    background-color: transparent; /* Make background transparent */
    box-shadow: none; /* Remove shadow if background is transparent */
    padding: 0; /* Remove padding if background is transparent */
    gap: 0.75rem; /* Slightly smaller gap for main menu */
}

/* Styling for buttons within all parent panels */
.parent-panel button {
    @apply flex-grow md:flex-grow-0 px-4 py-2 rounded-lg font-bold shadow-md transition-all duration-200;
    min-width: 180px; /* Ensure buttons have a minimum width for readability */
    font-size: 1.5rem; /* Make text larger */
    background-color: transparent; /* No background color */
    border: none; /* No border */
    color: #D14081; /* Vibrant purple text */
    box-shadow: none; /* No shadow */
    padding: 0.5rem 1rem; /* Adjust padding for text-like buttons */
}

.parent-panel button:hover {
    transform: none; /* No translateY effect */
    box-shadow: none; /* No shadow on hover */
    background-color: transparent; /* Still no background on hover */
    border: none; /* Still no border on hover */
    color: #FFD166; /* Yellow text on hover */
}

/* Specific styling for "Back to Parent Menu" button (at bottom of sub-panels) */
.back-to-parent-menu-btn { /* Renamed for clarity */
    background-color: transparent !important;
    border: none !important;
    color: #06D6A0 !important; /* Green text */
    box-shadow: none !important;
}

.back-to-parent-menu-btn:hover {
    background-color: transparent !important;
    border: none !important;
    color: #FFD166 !important;
    transform: none !important;
    box-shadow: none !important;
}

/* Top-left back button specific styling (for active lesson screen) */
#back-to-parent-menu-from-lesson {
    position: absolute;
    top: 1rem;
    left: 1rem;
    z-index: 10001; /* Ensure it's above other panel elements */
    font-size: 1.2rem; /* Slightly smaller than main buttons */
    color: #06D6A0; /* Green text */
    background-color: transparent;
    border: none;
    cursor: pointer;
    padding: 0.5rem;
    border-radius: 0.5rem;
    transition: color 0.2s ease-in-out;
}

#back-to-parent-menu-from-lesson:hover {
    color: #FFD166; /* Yellow text on hover */
}

/* Canvas for tracing */
#tracing-canvas {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 1; /* Below visual-feedback-area, above background */
    pointer-events: none; /* Initially don't block events */
}

/* Celebration Message Styles */
#celebration-message {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%) scale(0.5);
    font-size: 4rem; /* Large font size */
    font-weight: extra-bold;
    color: #FFD166; /* Yellow color */
    text-shadow: 3px 3px 6px rgba(0,0,0,0.7);
    opacity: 0;
    z-index: 10002; /* Above everything else */
    pointer-events: none;
    user-select: none;
    transition: all 0.3s ease-out; /* Smooth transition for scale and opacity */
}

#celebration-message.show {
    opacity: 1;
    transform: translate(-50%, -50%) scale(1);
}

/* New style for subtle glow trail */
.visual-element.glow-trail {
    border-radius: 50%; /* Make it round */
    opacity: 0.6; /* Initial opacity */
    box-shadow: 0 0 10px var(--element-color), 0 0 20px var(--element-color); /* Glow effect */
    transition: opacity 0.5s ease-out, transform 0.5s ease-out; /* Smooth fade and shrink */
    transform: scale(1); /* Start at full size */
    background-color: var(--element-color); /* Use color for background */
    /* Ensure text/emoji content is hidden for glow trail */
    text-indent: -9999px; /* Hide text content */
    overflow: hidden; /* Hide overflow from text-indent */
}
